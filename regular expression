link of video : https://www.youtube.com/playlist?list=PL4cUxeGkcC9g6m_6Sld9Q4jzqdqHd2HiD

regeg encolsed with '/'
eg: regEx = /[a-z]/

flags : 
eg: regEx = /[a-z]/{flags}

empty : It match only one occurance 
eg : /[a-z]/  => abc => it matches only a
eg : /[a-z]/  => Bbc => it matches b beacuse B is capital and range contain lower case so it goes for next element

g : global flag : multiple occurance matches
eg : /[a-z]/g  => abc => it matches all a, b and c
eg : /[a-z]/g  => aBc => it matches only a and c because B is in upper case

i : insesitive flag : provide case insensitivity
eg : /[a-z]/i  => BCa => it matches B
eg : /[a-z]/gi  => BCa => it matches all B C and a



[] : character set
eg : /[abc]d/    => means 1st letter in between a,b or c and 2nd letter is d
eg : /[a-z]23/   => means 1st letter in between range of a to z lower case
eg : /[a-bA-Z]/  => means 1st letter in between range pf a to z lower and upper both
eg : /[0-9]/ => only digit as a 1st letter

+ : one or more qauntifiers
eg : /[aeiou]+/ => we can write letter in between a,e,i,o,u for numerous times   => aaeeiaieoouio
eg : /[1-9]+/ => any number except 0


some special characters
eg : /\d/ => [0-9] all digits
eg : /\t/ => tab space only
eg : /\w/ => [a-zA-z0-9] includeing underscore _
eg : /\s/ => all types of white spaces tab, space etc.

{} : number of characters 
eg : /[0-5]{7}/ => only 7 characters between 1 to 5 
eg : /\d{3,}/ => at least 3 characters
eg : /\w{5,40}/ => minimum 5 and maximum 40 characters

[^] : negate symbol in character set
eg : /[^a]/ => any letter except a
eg : /[^\d]/ => numbers are not allowed

? : zero or more quantifier (it makes preceding character optional)
eg : /abc?ko/ => in this case c is optional => abcko or abko both matches with regEx
eg : /student[\d]?/ => [\d] is optional so => student, student0, student1 

. : any  character whatsoever (except newline character)
eg : /.+/ => whole string is matches except newline character like '\n'

* : one or more qauntifier (like +)
eg : /[l-n]*/ => we can write letter in between l to n   => llmnlnmlnmlllmmm
eg : /[1-9]*/ => any number except 0

\ : escape characters
eg : /abc\*/ => now we can match * => abc*
eg : /gaurav\./ = > now we can match . => gaurav.

^$ : start and end of regEx
eg : /^\d{10}$/ => 10 digits only



| : either or 
eg : /p|t/ => it matches p either t 
eg : /p|tower/ => it matches p either tower
eg : /(p|t)ower/ => becasue of paranthesis it matces power either tower 
eg : /(hello | bye | nice) world/ => it matches => hello world,  bye world,  nice world 
